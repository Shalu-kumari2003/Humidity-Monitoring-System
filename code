#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <DHT.h>

// Hardware Pins
#define DHTPIN 2
#define DHTTYPE DHT11
#define BUZZER_PIN 3
#define LED_PIN 4
#define RELAY_PIN 5
// Thresholds
const int DRY_AIR_THRESHOLD = 40;  // Below 40% = dry
const int HUMID_AIR_THRESHOLD = 70;          // Above 70% = humid
// Initialize components (TRY BOTH I2C ADDRESSES)
// LiquidCrystal_I2C lcd(0x27, 16, 2);  // Common address
LiquidCrystal_I2C lcd(0x3F, 16, 2);    // Alternate address
DHT dht(DHTPIN, DHTTYPE);
void setup() {
  Serial.begin(9600);
  
  // Initialize pins
  pinMode(LED_PIN, OUTPUT);
  pinMode(BUZZER_PIN, OUTPUT);
  pinMode(RELAY_PIN, OUTPUT);
  digitalWrite(RELAY_PIN, HIGH);                // Pump OFF
  
  // LCD Setup
  lcd.init();
  lcd.backlight();
  lcd.clear();
  // Startup message
  lcd.setCursor(0, 0);
  lcd.print("  PLANT MONITOR");
  lcd.setCursor(0, 1);
  lcd.print("  Starting...");
  dht.begin();
  delay(2000); // Allow sensors to stabilize
  lcd.clear();
}
void loop() {
  // Reading  sensors
  float humidity = dht.readHumidity();
  float temp = dht.readTemperature();
// Display humidity & temp
  lcd.setCursor(0, 0);
  lcd.print("H:");
  lcd.print(humidity, 1);
  lcd.print("% ");
   lcd.setCursor(8, 0);
  lcd.print("T:");
  lcd.print(temp, 1);
  lcd.write(223); // Degree symbol
  lcd.print("C");
                                                  // Status and alerts
  lcd.setCursor(0, 1);
  if (isnan(humidity) || isnan(temp)) {
    lcd.print("SENSOR ERROR!");
    digitalWrite(LED_PIN, HIGH);
    tone(BUZZER_PIN, 3000, 1000);
    return;
}
   if (humidity < DRY_AIR_THRESHOLD) {
    lcd.print("WATER NEEDED!   ");
    digitalWrite(LED_PIN, HIGH);
    tone(BUZZER_PIN, 1000, 500);
    digitalWrite(RELAY_PIN, LOW); // Buzzer ON
  } 
  else if (humidity > HUMID_AIR_THRESHOLD) {
    lcd.print("TOO HUMID!     ");
    digitalWrite(LED_PIN, HIGH);
    tone(BUZZER_PIN, 2000, 500);
    digitalWrite(RELAY_PIN, HIGH); // Buzzer OFF
  }
  else {
    lcd.print("NORMAL         ");
    digitalWrite(LED_PIN, LOW);
    noTone(BUZZER_PIN);
    digitalWrite(RELAY_PIN, HIGH);
  }

// Serial Monitor Output
  Serial.print("Humidity: ");
  Serial.print(humidity);
  Serial.print("% Temp: ");
  Serial.print(temp);
  Serial.print("Â°C | Pump: ");
  Serial.println(digitalRead(RELAY_PIN) ? "OFF" : "ON");
delay(3000);                // Update every 3 seconds
}
